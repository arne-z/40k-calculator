{"version":3,"sources":["components/Alert.js","components/CalcForm.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Alert","props","message","react_default","a","createElement","className","targets","name","toughness","armor","invul","hp","calcRerollDice","requiredRoll","numRolled","reroll","chanceToFail","firstRollMiss","pDiceLessThan","pDiceGreaterEqual","Math","pow","number","diceNumberError","isNaN","Number","isInteger","positiveNumberError","naturalNumberError","naturalNumberNotZeroError","getAverageDamage","attackConfig","targetConfig","attacks","damage","ap","strength","tohit","rerollHit","rerollWound","hits","woundsLost","wounds","bestSave","calcSavingThrows","calcToWound","min","modelsLost","toFixed","models","getResults","formState","values","error","form","errors","Attacks/Shots","Damage","AP","Strength","To-Hit","key","checkFieldErrors","undefined","enemies","components_Alert","map","enemy","response","find","target","LabeledInputField","label","placeholder","fieldName","esm","type","field","tabIndex","CalcForm","_ref","value","id","multiple","Header","App","components_Header","components_CalcForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a77a87e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Alert.scss';\r\n\r\n\r\nfunction Alert(props) {\r\n    const { message } = props;\r\n    return (\r\n        <div className=\"Alert\">\r\n            {message}\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport './CalcForm.scss';\r\nimport { Form, Text, Select, Option } from 'informed';\r\nimport Alert from './Alert';\r\n\r\nconst targets = [\r\n  { name: 'MEQ', toughness: 4, armor: 3, invul: 7, hp: 1 },\r\n  { name: 'TEQ', toughness: 4, armor: 2, invul: 5, hp: 2 },\r\n  { name: 'GEQ', toughness: 3, armor: 5, invul: 7, hp: 1 },\r\n  { name: 'Ork', toughness: 4, armor: 6, invul: 7, hp: 1 },\r\n  { name: 'Tank', toughness: 8, armor: 3, invul: 7, hp: 12 },\r\n  { name: 'Knight', toughness: 8, armor: 3, invul: 5, hp: 28 }\r\n]\r\n\r\nfunction calcRerollDice(requiredRoll, numRolled, reroll) {\r\n  let chanceToFail = null\r\n  if (reroll === 'ones') {\r\n    let firstRollMiss = pDiceLessThan(requiredRoll)\r\n    let missWasOne = firstRollMiss / (requiredRoll - 1)\r\n    let secondRollHit = missWasOne * pDiceGreaterEqual(requiredRoll)\r\n    chanceToFail = firstRollMiss - secondRollHit\r\n  } else if (reroll === 'all') {\r\n    chanceToFail = Math.pow(pDiceGreaterEqual(requiredRoll), 2)\r\n  }\r\n  else {\r\n    chanceToFail = pDiceLessThan(requiredRoll)\r\n  }\r\n  return numRolled - numRolled * chanceToFail\r\n}\r\n\r\nfunction pDiceGreaterEqual(number) { return (7 - number) / 6 }\r\nfunction pDiceLessThan(number) { return (number - 1) / 6 }\r\n\r\nconst diceNumberError = number => {\r\n  return (isNaN(number) || number < 1 || 6 < number || !Number.isInteger(number)) ? 'Needs to be a number between 1 and 6.' : false;\r\n}\r\nconst positiveNumberError = number => {\r\n  return (isNaN(number) || number < 0) ? 'Needs to be a positive number.' : false;\r\n}\r\nconst naturalNumberError = number => {\r\n  return (isNaN(number) || number < 0 || !Number.isInteger(number)) ? 'Needs to be a whole number.' : false;\r\n}\r\nconst naturalNumberNotZeroError = number => {\r\n  return (isNaN(number) || number < 1 || !Number.isInteger(number)) ? 'Needs to be a whole number greater than zero.' : false;\r\n}\r\n\r\nfunction checkFieldErrors(form) {\r\n  const { attacks, damage, ap, strength, tohit } = form;\r\n  const errors = {\r\n    \"Attacks/Shots\": positiveNumberError(attacks),\r\n    \"Damage\": positiveNumberError(damage),\r\n    \"AP\": naturalNumberError(ap),\r\n    \"Strength\": naturalNumberNotZeroError(strength),\r\n    \"To-Hit\": diceNumberError(tohit)\r\n  };\r\n  for (var key in errors) {\r\n    if (errors[key]) return \"Error in field \" + key + \": \" + errors[key]\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction calcSavingThrows(wounds, bestSave) {\r\n  return wounds - wounds * pDiceGreaterEqual(bestSave);\r\n}\r\n\r\n\r\nfunction calcToWound(strength, toughness) {\r\n  if (strength / toughness >= 2) return 2\r\n  else if (strength / toughness > 1) return 3\r\n  else if (strength / toughness === 1) return 4\r\n  else if (strength / toughness > 0.5) return 5\r\n  else return 6\r\n}\r\n\r\n\r\nfunction getAverageDamage(attackConfig, targetConfig) {\r\n  const { attacks, damage, ap, strength, tohit, rerollHit, rerollWound } = attackConfig\r\n  const { toughness, armor, invul, hp, name } = targetConfig\r\n  const hits = calcRerollDice(tohit, attacks, rerollHit)\r\n  const wounds = calcRerollDice((calcToWound(strength, toughness)), hits, rerollWound)\r\n  const bestSave = Math.min(armor + ap, invul)\r\n  const unsaved = calcSavingThrows(wounds, bestSave)\r\n  const woundsLost = unsaved * Math.min(damage, hp)\r\n  const modelsLost = woundsLost / hp\r\n  return { name: name, wounds: woundsLost.toFixed(2), models: modelsLost.toFixed(2) };\r\n  // return `Average damage caused to ${name}: ${woundsLost.toFixed(2)} wounds caused which kills ${modelsLost.toFixed(2)} models.`\r\n}\r\n\r\nfunction getResults(formState) {\r\n  const attackConfig = formState.values\r\n  const error = checkFieldErrors(attackConfig);\r\n  if (attackConfig.attacks === undefined\r\n    || attackConfig.damage === undefined\r\n    || attackConfig.ap === undefined\r\n    || attackConfig.strength === undefined\r\n    || attackConfig.tohit === undefined\r\n    || attackConfig.enemies === undefined) {\r\n    return <Alert message=\"Please enter all fields above and select at least one target to see the results.\" />;\r\n  }\r\n  else if (error) {\r\n    return <Alert message={error} />;\r\n  }\r\n  return (\r\n    <table className=\"CalcForm__response\">\r\n      <tr>\r\n        <th>Target</th>\r\n        <th>Wounds Caused</th>\r\n        <th>Models Lost</th>\r\n      </tr>\r\n      {attackConfig.enemies.map((enemy) => {\r\n        const response = getAverageDamage(attackConfig, targets.find(target => target.name === enemy))\r\n        return (\r\n          <tr>\r\n            <td>{enemy}</td>\r\n            <td>{response.wounds}</td>\r\n            <td>{response.models}</td>\r\n          </tr>\r\n        )\r\n      }\r\n      )}\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction LabeledInputField(props) {\r\n  const { label, placeholder, fieldName } = props;\r\n  return (\r\n    <div>\r\n      <label>\r\n        <span>\r\n          {label}\r\n        </span>\r\n        <Text className=\"form-control\" type=\"number\" field={fieldName} tabIndex=\"1\" placeholder={placeholder} />\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CalcForm() {\r\n  return (\r\n    <Form>\r\n      {({ formState }) => (\r\n        <div className=\"form-group CalcForm\">\r\n          <LabeledInputField label=\"Attacks/Shots:\" placeholder=\"Number of attacks or shots\" fieldName=\"attacks\" />\r\n          <LabeledInputField label=\"To-Hit:\" placeholder=\"Roll required to hit\" fieldName=\"tohit\" />\r\n          <div>\r\n            <Select className=\"form-control\" field=\"rerollHit\">\r\n              <Option value=\"none\" >Don't reroll hit rolls</Option>\r\n              <Option value=\"ones\">Re-roll ones only</Option>\r\n              <Option value=\"all\">Re-roll all failed</Option>\r\n            </Select>\r\n          </div>\r\n          <LabeledInputField label=\"Strength:\" placeholder=\"Strength of the weapon\" fieldName=\"strength\" />\r\n          <Select className=\"form-control\" field=\"rerollWound\">\r\n            <Option value=\"none\" >Don't re-roll wound rolls</Option>\r\n            <Option value=\"ones\">Re-roll ones only</Option>\r\n            <Option value=\"all\">Re-roll all failed</Option>\r\n          </Select>\r\n          <LabeledInputField label=\"AP:\" placeholder=\"Armor piercing value of the weapon\" fieldName=\"ap\" />\r\n          <LabeledInputField label=\"Damage:\" placeholder=\"Damage of the weapon\" fieldName=\"damage\" />\r\n          <div>\r\n            <label>\r\n              <span>\r\n                Target:\r\n              </span>\r\n              <Select\r\n                className=\"form-control\"\r\n                field=\"enemies\"\r\n                id=\"select-enemies\"\r\n                multiple>\r\n                <Option value=\"GEQ\">GEQ - Guardsmen Equivalent</Option>\r\n                <Option value=\"MEQ\">MEQ - Space Marine Equivalent</Option>\r\n                <Option value=\"TEQ\">TEQ - Terminator Equivalent</Option>\r\n                <Option value=\"Ork\">Ork - Ork Boyz</Option>\r\n                <Option value=\"Tank\">Tank - Leman Russ Equivalent</Option>\r\n                <Option value=\"Knight\">Knight - Imperial Knight Questoris</Option>\r\n              </Select>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            {getResults(formState)}\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default CalcForm;\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header\">\r\n            <p className=\"Header__headline\">Warhammer 40k 8th Edition Damage Calculator</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './App.scss';\r\nimport './components/CalcForm'\r\nimport CalcForm from './components/CalcForm';\r\nimport Header from './components/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <CalcForm/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}